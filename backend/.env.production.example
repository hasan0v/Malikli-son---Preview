# Django Environment Configuration for Production

# =============================================================================
# CORE DJANGO SETTINGS
# =============================================================================

# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new secret key for production: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=django-insecure-change-this-to-a-real-secret-key-in-production

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=False

# Hosts allowed to access this Django application
# Add your server IP and domain names
ALLOWED_HOSTS=127.0.0.1,localhost,app.malikli.store,api.malikli.store,YOUR_SERVER_IP

# =============================================================================
# DATABASE CONFIGURATION (Supabase PostgreSQL)
# =============================================================================

# Get this from your Supabase project: Settings > Database > Connection string > URI
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://postgres.your-project:your-password@aws-0-region.pooler.supabase.com:5432/postgres

# =============================================================================
# CLOUDFLARE R2 STORAGE CONFIGURATION
# =============================================================================

# Cloudflare R2 credentials
AWS_ACCESS_KEY_ID=your-cloudflare-r2-access-key-id
AWS_SECRET_ACCESS_KEY=your-cloudflare-r2-secret-access-key
AWS_STORAGE_BUCKET_NAME=malikli1992
AWS_S3_ENDPOINT_URL=https://1b3def703603101d5702f1381efebf2a.r2.cloudflarestorage.com
AWS_S3_REGION_NAME=auto
AWS_S3_CUSTOM_DOMAIN=media.malikli1992.com
AWS_LOCATION=media

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins for CORS - UPDATE WITH YOUR PRODUCTION DOMAIN
CORS_ALLOWED_ORIGINS=https://app.malikli.store,https://www.malikli.store

# =============================================================================
# EMAIL CONFIGURATION (Resend)
# =============================================================================

# Email backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# Resend SMTP Configuration
EMAIL_HOST=smtp.resend.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_HOST_USER=resend
EMAIL_HOST_PASSWORD=your-resend-api-key
DEFAULT_FROM_EMAIL=no-reply@malikli.store

# Resend API Key for direct API usage
RESEND_API_KEY=your-resend-api-key

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Frontend URL for password reset links and email templates
FRONTEND_URL=https://app.malikli.store

# =============================================================================
# OPTIONAL: ADDITIONAL PRODUCTION SETTINGS
# =============================================================================

# Session security (already configured in settings.py)
# SESSION_COOKIE_SECURE=True  # Will be set automatically when DEBUG=False
# CSRF_COOKIE_SECURE=True     # Will be set automatically when DEBUG=False

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Cache configuration (Redis recommended for production)
# REDIS_URL=redis://localhost:6379/0

# Sentry for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env in your backend directory
# 2. Replace all placeholder values with your actual credentials
# 3. Generate a new SECRET_KEY for production
# 4. Make sure to update ALLOWED_HOSTS with your server IP and domain
# 5. Verify your DATABASE_URL is correct and accessible
# 6. Test email configuration with your Resend credentials
# 7. Ensure CORS_ALLOWED_ORIGINS matches your frontend domain
# 8. Keep this file secure and never commit it to version control

# =============================================================================
# GETTING YOUR CREDENTIALS
# =============================================================================

# Supabase Database URL:
# 1. Go to your Supabase project dashboard
# 2. Settings > Database > Connection string > URI
# 3. Replace [YOUR-PASSWORD] with your actual database password

# Cloudflare R2 Credentials:
# 1. Go to Cloudflare dashboard > R2 Object Storage
# 2. Manage R2 API tokens > Create API token
# 3. Use the Access Key ID and Secret Access Key

# Resend API Key:
# 1. Go to Resend dashboard
# 2. API Keys > Create API Key
# 3. Use the generated key for both EMAIL_HOST_PASSWORD and RESEND_API_KEY

# Domain Configuration:
# 1. Point your domain DNS records to your server IP
# 2. Update ALLOWED_HOSTS and CORS_ALLOWED_ORIGINS accordingly
# 3. Make sure SSL certificate is configured for HTTPS
