'use client';

import { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import { RootState } from '@/store/store';
import { useI18n } from '@/hooks/useI18n';
import emailjs from '@emailjs/browser';
import styles from './contact.module.css';

export default function ContactPage() {
  const { t } = useI18n();
  const { user, isAuthenticated } = useSelector((state: RootState) => state.auth);
  
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  // Auto-fill form data from user profile when authenticated
  useEffect(() => {
    if (isAuthenticated && user) {
      setFormData(prev => ({
        ...prev,
        name: user.first_name && user.last_name 
          ? `${user.first_name} ${user.last_name}`.trim()
          : user.first_name || user.last_name || '',
        email: user.email || ''
      }));
    }
  }, [isAuthenticated, user]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmitStatus('idle');

    try {
      // EmailJS configuration
      const templateParams = {
        from_name: formData.name,
        from_email: formData.email,
        phone: formData.phone,
        subject: formData.subject,
        message: formData.message,
        to_name: 'Malikli1992 Team'
      };

      const result = await emailjs.send(
        'service_nf604ld', // SERVICE_ID
        'template_0vnaj2c', // TEMPLATE_ID
        templateParams,
        '037LRbdfVdiKdAuaI' // PUBLIC_KEY
      );      console.log('Email sent successfully:', result);
      setSubmitStatus('success');
      
      // Only clear subject and message, keep name and email for authenticated users
      if (isAuthenticated && user) {
        setFormData(prev => ({
          ...prev,
          subject: '',
          message: ''
        }));
      } else {
        setFormData({
          name: '',
          email: '',
          phone: '',
          subject: '',
          message: ''
        });
      }

    } catch (error) {
      console.error('Error sending email:', error);
      setSubmitStatus('error');
    } finally {
      setIsSubmitting(false);
    }
  };  return (
    <div className={styles.contactPage}>
      {/* Floating background elements */}
      <div className={styles.floatingElements}>
        <div className={`${styles.floatingCircle} ${styles.circle1}`}></div>
        <div className={`${styles.floatingCircle} ${styles.circle2}`}></div>
        <div className={`${styles.floatingCircle} ${styles.circle3}`}></div>
        <div className={`${styles.floatingCircle} ${styles.circle4}`}></div>
      </div>

      {/* Hero Section */}
      <div className={styles.heroSection}>
        <div className={styles.heroContent}>
          <h1 className={styles.heroTitle}>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h1>
          <p className={styles.heroSubtitle}>
            –ú—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
          </p>
        </div>
      </div>

      {/* Main Content */}
      <div className={styles.contactContainer}>

        <div className={styles.content}>
          <div className={styles.contactInfo}>
            <h2 className={styles.contactInfoTitle}>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>            
            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>ÔøΩ</div>
              <div className={styles.infoText}>
                <div className={styles.infoLabel}>–ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã</div>
                <div className={styles.infoValue}>
                  <a href="mailto:e.malikli1992@gmail.com">e.malikli1992@gmail.com</a>
                </div>
              </div>
            </div>

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>ÔøΩ</div>
              <div className={styles.infoText}>
                <div className={styles.infoLabel}>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</div>
                <div className={styles.infoValue}>
                  <a href="tel:+375445371787">+375 44 537 1787</a>
                </div>
              </div>
            </div>

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>‚è∞</div>
              <div className={styles.infoText}>
                <div className={styles.infoLabel}>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</div>
                <div className={styles.infoValue}>
                  24/7
                </div>
              </div>
            </div>

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>üìç</div>
              <div className={styles.infoText}>
                <div className={styles.infoLabel}>–ê–¥—Ä–µ—Å</div>
                <div className={styles.infoValue}>
                  220005, –ú–∏–Ω—Å–∫, —É–ª. –í–µ—Ä—ã –•–æ—Ä—É–∂–µ–π, 6–ê, –ø–æ–º. 94–ò
                </div>
              </div>
            </div>
          </div>          <div className={styles.formSection}>
            <h2 className={styles.formTitle}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</h2>            
            {/* User authentication notification */}
            {isAuthenticated && user && (
              <div className={`${styles.message} ${styles.info}`}>
                ‚ÑπÔ∏è –í—ã –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ {user.first_name || user.email}. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
              </div>
            )}
            
            {submitStatus === 'success' && (
              <div className={`${styles.message} ${styles.success}`}>
                ‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
              </div>
            )}

            {submitStatus === 'error' && (
              <div className={`${styles.message} ${styles.error}`}>
                ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.
              </div>
            )}

            <form onSubmit={handleSubmit} className={styles.form}>
              <div className={styles.formRow}>
                <div className={styles.formGroup}>
                  <label htmlFor="name" className={styles.label}>
                    –ò–º—è <span className={styles.required}>*</span>
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    required
                    disabled={isSubmitting}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                    className={styles.input}
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="email" className={styles.label}>
                    Email <span className={styles.required}>*</span>
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    required
                    disabled={isSubmitting}
                    placeholder="your@email.com"
                    className={styles.input}
                  />
                </div>
              </div>              <div className={styles.formRow}>
                <div className={styles.formGroup}>
                  <label htmlFor="phone" className={styles.label}>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    disabled={isSubmitting}
                    placeholder="+375 (44) 123-45-67"
                    className={styles.input}
                  />
                </div>

                <div className={styles.formGroup}>
                  <label htmlFor="subject" className={styles.label}>
                    –¢–µ–º–∞ <span className={styles.required}>*</span>
                  </label>
                  <input
                    type="text"
                    id="subject"
                    name="subject"
                    value={formData.subject}
                    onChange={handleInputChange}
                    required
                    disabled={isSubmitting}
                    placeholder="–¢–µ–º–∞ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
                    className={styles.input}
                  />
                </div>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="message" className={styles.label}>
                  –°–æ–æ–±—â–µ–Ω–∏–µ <span className={styles.required}>*</span>
                </label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  required
                  disabled={isSubmitting}
                  rows={6}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏..."
                  className={styles.textarea}
                />
              </div>              <button 
                type="submit" 
                className={`${styles.submitButton} ${isSubmitting ? styles.submitting : ''}`}
                disabled={isSubmitting}
              >
                {isSubmitting ? (
                  <>
                    <span className={styles.spinner}></span>
                    –û—Ç–ø—Ä–∞–≤–∫–∞...
                  </>
                ) : (
                  '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'
                )}
              </button>              </form>
          </div>
        </div>
      </div>
    </div>
  );
}
